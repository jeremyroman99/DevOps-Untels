name: ci-sonarqube-android
on:
  pull_request:
    branches: [develop, release]
jobs:
  SonarCloud:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '17' 
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Permisos
        run: chmod +x gradlew
      #- name: Build and analyze
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #  run: ./gradlew build sonar --info

      - name: Build and lint
        run: |
          ./gradlew build
          ./gradlew lintDebug

      - name: Upload lint report
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

      - name: Comment on PR with lint report
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            const path = 'app/build/reports/lint-results-debug.html';
            const report = fs.readFileSync(path, 'utf8');
            const githubClient = context.github;
            const artifactName = 'lint-results-debug.html';
            const artifactData = Buffer.from(report).toString('base64');
            
            githubClient.rest.actions.createArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: context.workflow.workflow_id,
              name: artifactName,
              data: artifactData,
              content_type: 'text/html'
            }).then(() => {
              githubClient.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `Lint report attached: [${artifactName}](${githubClient.rest.actions.getArtifactUrl({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifactName
                })})`,
              });
            });


