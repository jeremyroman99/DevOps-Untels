name: ci-sonarqube-android
on:
  pull_request:
    branches: [develop, release]
jobs:
  SonarCloud:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '17' 
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Permisos
        run: chmod +x gradlew
      #- name: Build and analyze
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #  run: ./gradlew build sonar --info
      #- name: Build and lint
      #  run: |
      #    ./gradlew build
      #    ./gradlew lintDebug
      #- run: |
      #    pip install beautifulsoup4
      #    python exportar_lint.py
      #    cat overview.txt
      #    python generando_mensaje.py
      - run: |
          cat formatted_overview.txt
      - run: |
          echo "LINT_ERRORS=$(grep -o '0 errors,' app/build/reports/lint-results-debug.txt | cut -d' ' -f1)" >> $GITHUB_ENV
          echo "LINT_WARNINGS=$(grep -o '[0-9]\+ warnings' app/build/reports/lint-results-debug.txt | cut -d' ' -f1)" >> $GITHUB_ENV
          pip install PyGithub
      - name: Publish PR comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python publish_comment.py   
      #    echo "LINT_OVERVIEW=$(cat formatted_overview.txt)" >> $GITHUB_OUTPUT
      #- name: Upload lint report
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: lint-report
      #    path: app/build/reports
      #- run: env
      #- uses: actions/github-script@v7
      #  with:
      #    script: |
      #      const lint_errors = process.env.LINT_ERRORS;
      #      const lint_warnings = process.env.LINT_WARNINGS;
      #      github.rest.issues.createComment({
      #        issue_number: context.issue.number,
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        body: `Lint report content: Número de errores: ${lint_errors} Número de advertencias: ${lint_warnings} 
      #        `
      #      })